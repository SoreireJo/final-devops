name: merge-actions

on:
  push:
    branches: 
      -main
      -dev
      -qa
      -prod
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  env_var: ${{ vars.ENV_CONTEXT_VAR }}
  env_runner: "ubuntu-latest"

jobs:
  # imprimir nombre y rama si la rama es dev
  job-dev:
    if: $env_var == 'dev'
    runs-on: $env_runner

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script 1
        run: |
          echo "rama: $env_var"
          echo "nombre: ${{ vars.ALUMNO }}"

  # imprimir email y rama si la rama es qa
  job-qa:
    if: $env_var == 'qa'
    runs-on: $env_runner

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script 2
        run: |
          echo "rama: $env_var"
          echo "email: ${{ vars.EMAIL }}"

  # imprimir nombre y rama si la rama es prod
  job-prod:
    if: $env_var == 'prod'
    runs-on: $env_runner

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script 3
        run: |
          echo "rama: $env_var"
          echo "nombre: ${{ vars.ALUMNO }}"
          echo "email: ${{ vars.EMAIL }}"

  # hacer curl a la URL e imprimir el resultado junto con el nombre de la rama
  job-2:
    runs-on: $env_runner

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script 4
        run: |
          echo "rama: $env_var"
          curl ${{ secrets.URL }}

